(this.webpackJsonpshuflix=this.webpackJsonpshuflix||[]).push([[0],{15:function(e,t,a){},16:function(e,t,a){},17:function(e,t,a){},18:function(e,t,a){"use strict";a.r(t);var s=a(0),n=a(1),o=a.n(n),c=a(9),i=a.n(c),h=(a(15),a(8)),r=a(3),l=a(4),d=a(2),u=a(6),b=a(5),j=(a(16),a(17),function(e){Object(u.a)(a,e);var t=Object(b.a)(a);function a(){return Object(r.a)(this,a),t.apply(this,arguments)}return Object(l.a)(a,[{key:"render",value:function(){return Object(s.jsxs)("div",{className:"details",children:["S",Object(s.jsx)("span",{className:"season-number",children:this.props.data.season}),"-E",Object(s.jsx)("span",{className:"episode-number",children:this.props.data.Episode}),"\xa0",Object(s.jsx)("span",{className:"title",children:this.props.data.Title}),"\xa0",Object(s.jsxs)("a",{target:"_blank",href:"https://www.imdb.com/title/".concat(this.props.data.imdbID,"/"),children:["(",this.props.data.imdbRating,"\u2605)"]})]})}}]),a}(o.a.Component)),p={API_KEY:"b61c4799"},m=function(e){Object(u.a)(a,e);var t=Object(b.a)(a);function a(e){var s;return Object(r.a)(this,a),(s=t.call(this,e)).state={search:"",seasons:"",result:""},s.handleSearchChange=s.handleSearchChange.bind(Object(d.a)(s)),s.handleSeasonsChange=s.handleSeasonsChange.bind(Object(d.a)(s)),s.handleSubmit=s.handleSubmit.bind(Object(d.a)(s)),s}return Object(l.a)(a,[{key:"handleSearchChange",value:function(e){this.setState({search:e.target.value})}},{key:"handleSeasonsChange",value:function(e){this.setState({seasons:e.target.value})}},{key:"handleSubmit",value:function(e){e.preventDefault();var t=encodeURI(this.state.search),a=this;fetch("https://www.omdbapi.com/?apikey=".concat(p.API_KEY,"&t=").concat(t)).then((function(e){return e.json()})).then((function(e){var s=e.totalSeasons,n=a.state.seasons.trim().split(/[ ]+/),o=0===(n=n.filter((function(e){return""!==e&&!(+e<=0||+e>s)}))).length?Math.floor(Math.random()*s)+1:n[Math.floor(Math.random()*n.length)];fetch("https://www.omdbapi.com/?apikey=".concat(p.API_KEY,"&t=").concat(t,"&season=").concat(o)).then((function(e){return e.json()})).then((function(e){var t=e.Episodes,s=t[Math.floor(Math.random()*t.length)];a.setState({result:Object(h.a)(Object(h.a)({},s),{},{season:o})})})).catch((function(e){return console.log(e)}))})).catch((function(e){return console.log(e)}))}},{key:"render",value:function(){return Object(s.jsxs)(o.a.Fragment,{children:[Object(s.jsx)("div",{className:"donate-container",children:Object(s.jsx)("a",{className:"donate-button",href:"https://www.buymeacoffee.com/mrrobot",children:"Support"})}),Object(s.jsxs)("div",{className:"main",children:[Object(s.jsx)("h1",{children:"Shufflix"}),Object(s.jsxs)("form",{onSubmit:this.handleSubmit,children:[Object(s.jsx)("input",{placeholder:"Enter TV show",className:"show",type:"text",value:this.state.search,onChange:this.handleSearchChange}),Object(s.jsx)("input",{placeholder:"All Seasons",className:"seasons",type:"text",value:this.state.seasons,onChange:this.handleSeasonsChange}),Object(s.jsx)("input",{type:"submit",value:"Submit"})]}),""!==this.state.result?Object(s.jsx)(j,{data:this.state.result}):Object(s.jsx)("div",{})]}),Object(s.jsxs)("div",{className:"help",children:[Object(s.jsx)("h2",{children:"How does this work?"}),Object(s.jsxs)("p",{children:["This tool randomizes an episode from all the episodes in a TV show. Good while looking for a random episode to watch of ",Object(s.jsx)("i",{children:"The Office"})," during lunch :)"]}),Object(s.jsx)("p",{children:"Enter a TV show name in the first box. Make sure to spell it correct."}),Object(s.jsx)("p",{children:"(OPTIONAL) Enter season numbers you want to shuffle the episode from, separated by space. Example: 1 2 5 100 would randomize any episode within season 1, 2, 5 or 100. If left blank, system randomizes all episodes of the TV show."})]})]})}}]),a}(o.a.Component);i.a.render(Object(s.jsx)(o.a.StrictMode,{children:Object(s.jsx)(m,{})}),document.getElementById("root"))}},[[18,1,2]]]);
//# sourceMappingURL=main.fc13e1b1.chunk.js.map